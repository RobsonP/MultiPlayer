/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PlayFrame.java
 *
 * Created on 13.04.2012, 13:21:44
 */
package gui;

import control.Main_controls;
import instance.Instance_data;
import instance.Instance_hold;
import java.awt.Color;
import java.awt.Container;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import soSSH.Play;
import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;

/**
 *
 * @author RobsonP
 */
public class PlayFrame extends javax.swing.JFrame {
    private EmbeddedMediaPlayerComponent empc;
    private final MPlayer_EventListener mpel;
    private final FS_KeyListener kl;
    private int vo_value, sl_value;
    private boolean init, stop, playcontrol, iconfied, dragged;
    
    /** Creates new form PlayFrame */
    public PlayFrame() {
        vo_value = 0;
        sl_value = 0;
        init = false;
        stop = false;
        playcontrol = true;
        iconfied = false;
        
        initComponents();
        this.setTitle("Play");
        this.setIconImage(Instance_hold.getIm_hold().getNeu12());
        this.addComponentListener(new My_PL_ComponentListener());
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        Color c = new Color(240,240,240);
        Container con = this.getContentPane();
        this.jPanel_nav.setBackground(c);
        con.setBackground( c );
        
        this.setAlwaysOnTop(true);
        this.setSize(800, 600);
        
        kl = new FS_KeyListener();
        this.addKeyListener(kl);
                
        mpel = new MPlayer_EventListener();        
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_View = new javax.swing.JPanel();
        jPanel_nav = new javax.swing.JPanel();
        jSlider_Media = new javax.swing.JSlider();
        jSlider_vol = new javax.swing.JSlider();
        jLabel_prev = new javax.swing.JLabel();
        jLabel_time = new javax.swing.JLabel();
        jLabel_stop = new javax.swing.JLabel();
        jLabel_play = new javax.swing.JLabel();
        jLabel_volume = new javax.swing.JLabel();
        jLabel_next = new javax.swing.JLabel();
        jLabel_medianame = new javax.swing.JLabel();
        jToggleButton_lock = new javax.swing.JToggleButton();
        jButton_fullscreen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ViewLayout = new javax.swing.GroupLayout(jPanel_View);
        jPanel_View.setLayout(jPanel_ViewLayout);
        jPanel_ViewLayout.setHorizontalGroup(
            jPanel_ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel_ViewLayout.setVerticalGroup(
            jPanel_ViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );

        jSlider_Media.setMaximum(1000);
        jSlider_Media.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider_Media.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseClicked(evt);
            }
        });
        jSlider_Media.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseDragged(evt);
            }
        });

        jSlider_vol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider_volMouseDragged(evt);
            }
        });

        jLabel_prev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_prev_small.png"))); // NOI18N
        jLabel_prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_prevMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseReleased(evt);
            }
        });

        jLabel_time.setText("0:00");

        jLabel_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_stop_small.png"))); // NOI18N
        jLabel_stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_stopMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseReleased(evt);
            }
        });

        jLabel_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_pause_small.png"))); // NOI18N
        jLabel_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_playMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_playMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_playMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_playMousePressed(evt);
            }
        });

        jLabel_volume.setText("Volume");

        jLabel_next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_fwd_small.png"))); // NOI18N
        jLabel_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_nextMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseReleased(evt);
            }
        });

        jLabel_medianame.setText(" ");

        jToggleButton_lock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/playframe_toggle.png"))); // NOI18N
        jToggleButton_lock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_lockActionPerformed(evt);
            }
        });

        jButton_fullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/fs.png"))); // NOI18N
        jButton_fullscreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_fullscreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_navLayout = new javax.swing.GroupLayout(jPanel_nav);
        jPanel_nav.setLayout(jPanel_navLayout);
        jPanel_navLayout.setHorizontalGroup(
            jPanel_navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSlider_Media, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel_navLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel_medianame)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel_navLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_play)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_stop)
                .addGap(18, 18, 18)
                .addComponent(jLabel_time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_prev)
                .addGap(18, 18, 18)
                .addComponent(jLabel_next)
                .addGap(39, 39, 39)
                .addComponent(jToggleButton_lock, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_volume)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider_vol, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jButton_fullscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel_navLayout.setVerticalGroup(
            jPanel_navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_navLayout.createSequentialGroup()
                .addComponent(jSlider_Media, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel_navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider_vol, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_navLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel_time))
                    .addComponent(jLabel_stop)
                    .addComponent(jLabel_play)
                    .addComponent(jLabel_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_next, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_navLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel_volume)
                        .addComponent(jToggleButton_lock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_fullscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_medianame))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_View, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_nav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_View, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_nav, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        /*
        if (evt.getClickCount() >= 2) {
            this.setVisible(false);
            Instance_hold.getMframe().getjPanel_nav().setVisible(true);
            Instance_hold.getMframe().getjLabel_play().setIcon(this.jLabel_play.getIcon());
            Instance_hold.getMframe().getjLabel_stop().setIcon(this.jLabel_stop.getIcon());
            Instance_hold.getMframe().getjLabel_prev().setIcon(this.jLabel_prev.getIcon());
            Instance_hold.getMframe().getjLabel_next().setIcon(this.jLabel_next.getIcon());
            Instance_hold.getMframe().setStop(this.stop);
        }
        */
    }//GEN-LAST:event_formMouseClicked

    private void jButton_fullscreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_fullscreenActionPerformed
        System.out.println(Instance_data.getPlaypath());
        File file = new File(Instance_data.getPlaypath());
        
        Instance_hold.getMframe().getClistener().setFullscreen(true);
        Instance_hold.getFsf().setSize(this.getGraphicsConfiguration().getBounds().getSize());
        Instance_hold.getFsnt().setSize((int)this.getGraphicsConfiguration().getBounds().getWidth(),75);
        
        if (this.getX() < java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth()) {
            Instance_hold.getFsf().setLocation(0,0);
            Instance_hold.getFsnt().setLocation(0, (int)(this.getGraphicsConfiguration().getBounds().getHeight()-75));
        }else {
            Instance_hold.getFsf().setLocation((int)java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth(),0);
            Instance_hold.getFsnt().setLocation((int)java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth(), (int)(this.getGraphicsConfiguration().getBounds().getHeight()-75));
        }
        
        System.out.println("X LOC: " + Instance_hold.getFsf().getLocation().getX());
        System.out.println("Y LOC: " + Instance_hold.getFsf().getLocation().getY());
        System.out.println("SCREENSIZE X: " + this.getGraphicsConfiguration().getBounds().getHeight());
        System.out.println("SCREENSIZE Y: " + this.getGraphicsConfiguration().getBounds().getWidth());
                
        int vol;
        
        this.setVisible(false);
        vol = this.empc.getMediaPlayer().getVolume();
        Instance_data.setMedia_time(this.empc.getMediaPlayer().getTime());
        this.empc.getMediaPlayer().stop();
        Instance_hold.getFsf().setVisible(true);
        Instance_hold.getFsf().getEmpc().getMediaPlayer().playMedia(Instance_data.getPlaypath());
        Instance_hold.getFsf().getEmpc().getMediaPlayer().setTime(Instance_data.getMedia_time());
        Instance_hold.getFsf().getEmpc().getMediaPlayer().setVolume(vol);
        
        while(!Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying() && file.exists()) {
                //System.out.println("WAITING TO START PLAYING:::::");
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Play.class.getName()).log(Level.SEVERE, null, ex);
                }
            };
            
        Instance_hold.getFsf().getjPanel_View().getComponent(0).setSize(Instance_hold.getFsf().getjPanel_View().getSize());
        Instance_hold.getFsf().getjPanel_View().repaint();    
        Instance_hold.getFsnt().getjSlider_Media().setValue(this.jSlider_vol.getValue());        
        
        Instance_hold.getFsnt().getjLabel_play().setIcon(Instance_hold.getIm_hold().getMcb_grey_pause_small());
        
        if (Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
            Instance_hold.getFsnt().setStop(false);
        }
        
        System.out.println("Fullscreen");
    }//GEN-LAST:event_jButton_fullscreenActionPerformed

    private void jSlider_MediaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseReleased
        if (dragged) {
            Instance_hold.getPlayframe().getEmpc().getMediaPlayer().setTime((int)(Instance_data.getMedia_length()*(Instance_hold.getPlayframe().getSl_value()/1000.0)));
            dragged = false;
        }
    }//GEN-LAST:event_jSlider_MediaMouseReleased

    private void jSlider_MediaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseClicked
        if (!dragged) Instance_hold.getPlayframe().getEmpc().getMediaPlayer().setTime((int)(Instance_data.getMedia_length()*(this.jSlider_Media.getMousePosition().getX()/this.jSlider_Media.getSize().getWidth())));
    }//GEN-LAST:event_jSlider_MediaMouseClicked

    private void jSlider_MediaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseDragged
        dragged = true;
        Instance_hold.getPlayframe().setSl_value(this.jSlider_Media.getValue());
    }//GEN-LAST:event_jSlider_MediaMouseDragged

    private void jSlider_volMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_volMouseDragged
        Instance_hold.getPlayframe().setVo_value(this.jSlider_vol.getValue());
        Instance_hold.getPlayframe().getEmpc().getMediaPlayer().setVolume(Instance_hold.getPlayframe().getVo_value());
        Instance_hold.getPlayframe().getjSlider_vol().setValue(Instance_hold.getPlayframe().getVo_value());
        Instance_hold.getFsnt().getjSlider_vol().setValue(Instance_hold.getPlayframe().getVo_value());
    }//GEN-LAST:event_jSlider_volMouseDragged

    private void jLabel_prevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseClicked
        System.out.println("PLAYCONTROL: " + this.playcontrol);
        if (this.playcontrol) {
            this.playcontrol = false;

            Instance_hold.getMframe().getjProgressBar_main().setIndeterminate(true);
            this.setEnabled(false);
            Main_controls.prevMedia();

            while(!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying() && !Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            this.setEnabled(true);
            this.playcontrol = true;
        }
    }//GEN-LAST:event_jLabel_prevMouseClicked

    private void jLabel_prevMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseEntered
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_blue_prev_small());
    }//GEN-LAST:event_jLabel_prevMouseEntered

    private void jLabel_prevMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseExited
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_grey_prev_small());
    }//GEN-LAST:event_jLabel_prevMouseExited

    private void jLabel_prevMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMousePressed
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_green_prev_small());
    }//GEN-LAST:event_jLabel_prevMousePressed

    private void jLabel_prevMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseReleased
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_blue_prev_small());
    }//GEN-LAST:event_jLabel_prevMouseReleased

    private void jLabel_stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseClicked
        Instance_hold.getPlayframe().getEmpc().getMediaPlayer().stop();
        while(Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying()) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(PlayFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_grey_play_small());
        this.jSlider_Media.setValue(0);
        stop = true;
    }//GEN-LAST:event_jLabel_stopMouseClicked

    private void jLabel_stopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseEntered
        this.jLabel_stop.setIcon(Instance_hold.getIm_hold().getMcb_blue_stop_small());
    }//GEN-LAST:event_jLabel_stopMouseEntered

    private void jLabel_stopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseExited
        this.jLabel_stop.setIcon(Instance_hold.getIm_hold().getMcb_grey_stop_small());
    }//GEN-LAST:event_jLabel_stopMouseExited

    private void jLabel_stopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMousePressed
        this.jLabel_stop.setIcon(Instance_hold.getIm_hold().getMcb_green_stop_small());
    }//GEN-LAST:event_jLabel_stopMousePressed

    private void jLabel_stopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseReleased
        this.jLabel_stop.setIcon(Instance_hold.getIm_hold().getMcb_blue_stop_small());
    }//GEN-LAST:event_jLabel_stopMouseReleased

    private void jLabel_playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMouseClicked
        if (this.playcontrol) {
            this.setEnabled(false);
            if (!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying()) {
                Instance_hold.getPlayframe().getEmpc().getMediaPlayer().start();
                while(!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying()) {
                    //System.out.println("WAITING TO START PLAYING:::::");
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {

                    }
                }

                this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_blue_pause_small());
                stop = false;
            }
            else {
                Instance_hold.getPlayframe().getEmpc().getMediaPlayer().pause();
                while(Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying()) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(PlayFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_blue_play_small());
                stop = true;
            }
            this.setEnabled(true);
        }
    }//GEN-LAST:event_jLabel_playMouseClicked

    private void jLabel_playMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMouseEntered
        if (stop) this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_blue_play_small());
        else this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_blue_pause_small());
    }//GEN-LAST:event_jLabel_playMouseEntered

    private void jLabel_playMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMouseExited
        if (stop) this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_grey_play_small());
        else this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_grey_pause_small());
    }//GEN-LAST:event_jLabel_playMouseExited

    private void jLabel_playMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMousePressed
        if (stop) {
            this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_green_play_small());
        }else {
            this.jLabel_play.setIcon(Instance_hold.getIm_hold().getMcb_green_pause_small());
        }
    }//GEN-LAST:event_jLabel_playMousePressed

    private void jLabel_nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseClicked
        System.out.println("PLAYCONTROL: " + this.playcontrol);
        if (this.playcontrol) {
            this.playcontrol = false;
            //System.out.println("PLAYCONTROL: " + this.playcontrol);

            Instance_hold.getMframe().getjProgressBar_main().setIndeterminate(true);
            this.setEnabled(false);
            Main_controls.nextMedia();

            while(!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying() && !Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            this.setEnabled(true);
            this.playcontrol = true;
        }
    }//GEN-LAST:event_jLabel_nextMouseClicked

    private void jLabel_nextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseEntered
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_blue_fwd_small());
    }//GEN-LAST:event_jLabel_nextMouseEntered

    private void jLabel_nextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseExited
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_grey_fwd_small());
    }//GEN-LAST:event_jLabel_nextMouseExited

    private void jLabel_nextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMousePressed
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_green_fwd_small());
    }//GEN-LAST:event_jLabel_nextMousePressed

    private void jLabel_nextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseReleased
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_blue_fwd_small());
    }//GEN-LAST:event_jLabel_nextMouseReleased

    private void jToggleButton_lockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_lockActionPerformed
        this.setVisible(false);
        Instance_hold.getMframe().getjPanel_nav().setVisible(true);
        Instance_hold.getMframe().getjLabel_play().setIcon(this.jLabel_play.getIcon());
        Instance_hold.getMframe().getjLabel_stop().setIcon(this.jLabel_stop.getIcon());
        Instance_hold.getMframe().getjLabel_prev().setIcon(this.jLabel_prev.getIcon());
        Instance_hold.getMframe().getjLabel_next().setIcon(this.jLabel_next.getIcon());
        Instance_hold.getMframe().setStop(this.stop);
        Instance_hold.getMframe().getjToggleButton_lock().setSelected(true);
    }//GEN-LAST:event_jToggleButton_lockActionPerformed

    public EmbeddedMediaPlayerComponent getEmpc() {
        return empc;
    }

    public JSlider getjSlider_Media() {
        return jSlider_Media;
    }

    public JSlider getjSlider_vol() {
        return jSlider_vol;
    }

    public void setjSlider_vol(JSlider jSlider_vol) {
        this.jSlider_vol = jSlider_vol;
    }

    public void init() {
        if (init == false) {

            empc = new EmbeddedMediaPlayerComponent();
            empc.getMediaPlayer().addMediaPlayerEventListener(mpel);
        
            this.jPanel_View.add(empc);
            this.jPanel_View.getComponent(0).setSize(jPanel_View.getSize());
            this.jPanel_View.repaint();

            init = true;
        }
    }

    public JLabel getjLabel_time() {
        return jLabel_time;
    }

    public void setjLabel_time(JLabel jLabel_time) {
        this.jLabel_time = jLabel_time;
    }

    public JButton getjButton_fullscreen() {
        return jButton_fullscreen;
    }

    public void setjButton_fullscreen(JButton jButton_fullscreen) {
        this.jButton_fullscreen = jButton_fullscreen;
    }

    public JLabel getjLabel_play() {
        return jLabel_play;
    }

    public boolean isIconfied() {
        return iconfied;
    }

    public JLabel getjLabel_medianame() {
        return jLabel_medianame;
    }

    public JLabel getjLabel_stop() {
        return jLabel_stop;
    }

    public void setjLabel_stop(JLabel jLabel_stop) {
        this.jLabel_stop = jLabel_stop;
    }

    public JLabel getjLabel_prev() {
        return jLabel_prev;
    }

    public void setjLabel_prev(JLabel jLabel_prev) {
        this.jLabel_prev = jLabel_prev;
    }

    public JLabel getjLabel_next() {
        return jLabel_next;
    }

    public void setjLabel_next(JLabel jLabel_next) {
        this.jLabel_next = jLabel_next;
    }

    public JPanel getjPanel_View() {
        return jPanel_View;
    }

    public JPanel getjPanel_nav() {
        return jPanel_nav;
    }

    public void setjPanel_nav(JPanel jPanel_nav) {
        this.jPanel_nav = jPanel_nav;
    }

    public int getSl_value() {
        return sl_value;
    }

    public void setSl_value(int sl_value) {
        this.sl_value = sl_value;
    }

    public int getVo_value() {
        return vo_value;
    }

    public void setVo_value(int vo_value) {
        this.vo_value = vo_value;
    }

    public boolean isStop() {
        return stop;
    }

    public void setStop(boolean stop) {
        this.stop = stop;
    }

    public MPlayer_EventListener getMpel() {
        return mpel;
    }


    /**
     * @param args the command line arguments
     */

    public JToggleButton getjToggleButton_lock() {
        return jToggleButton_lock;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_fullscreen;
    private javax.swing.JLabel jLabel_medianame;
    private javax.swing.JLabel jLabel_next;
    private javax.swing.JLabel jLabel_play;
    private javax.swing.JLabel jLabel_prev;
    private javax.swing.JLabel jLabel_stop;
    private javax.swing.JLabel jLabel_time;
    private javax.swing.JLabel jLabel_volume;
    private javax.swing.JPanel jPanel_View;
    private javax.swing.JPanel jPanel_nav;
    private javax.swing.JSlider jSlider_Media;
    private javax.swing.JSlider jSlider_vol;
    private javax.swing.JToggleButton jToggleButton_lock;
    // End of variables declaration//GEN-END:variables
}