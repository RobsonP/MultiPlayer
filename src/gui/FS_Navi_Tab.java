/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FS_Navi_Tab.java
 *
 * Created on 25.04.2012, 16:45:39
 */
package gui;

import control.Main_controls;
import instance.Instance_data;
import instance.Instance_hold;
import java.awt.Color;
import java.awt.Container;
/*
import java.awt.Dimension;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.PointerInfo;
*/
import java.io.File;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JSlider;

/**
 *
 * @author RobsonP
 */
public class FS_Navi_Tab extends JDialog {
    private int sl_value = 0;
    private int vo_value = 0;
    private boolean stop = false, dragged = false, playcontrol = true;
    
    public FS_Navi_Tab() {
        initComponents();
        this.setOpacity(0.7f);        
        
        Color c = new Color(70,70,70);
        Container con = this.getContentPane();
        con.setBackground( c);
    }
    


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider_Media = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jSlider_vol = new javax.swing.JSlider();
        jLabel_time = new javax.swing.JLabel();
        jLabel_stop = new javax.swing.JLabel();
        jButton_fullscreen = new javax.swing.JButton();
        jLabel_play = new javax.swing.JLabel();
        jLabel_next = new javax.swing.JLabel();
        jLabel_prev = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        jSlider_Media.setMaximum(1000);
        jSlider_Media.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseEntered(evt);
            }
        });
        jSlider_Media.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider_MediaMouseDragged(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Volume");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
        });

        jSlider_vol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSlider_volMouseEntered(evt);
            }
        });
        jSlider_vol.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider_volMouseDragged(evt);
            }
        });

        jLabel_time.setForeground(new java.awt.Color(204, 204, 204));
        jLabel_time.setText("0:00");
        jLabel_time.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_timeMouseEntered(evt);
            }
        });

        jLabel_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_stop_small.png"))); // NOI18N
        jLabel_stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_stopMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_stopMousePressed(evt);
            }
        });

        jButton_fullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/fs.png"))); // NOI18N
        jButton_fullscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_fullscreenMouseEntered(evt);
            }
        });
        jButton_fullscreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_fullscreenActionPerformed(evt);
            }
        });

        jLabel_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_pause_small.png"))); // NOI18N
        jLabel_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_playMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_playMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_playMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_playMousePressed(evt);
            }
        });

        jLabel_next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_fwd_small.png"))); // NOI18N
        jLabel_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_nextMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_nextMousePressed(evt);
            }
        });

        jLabel_prev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/design/mcb_grey_prev_small.png"))); // NOI18N
        jLabel_prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_prevMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_prevMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel_play)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_stop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_time)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel_prev)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_next)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider_vol, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jButton_fullscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSlider_Media, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSlider_Media, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_play)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSlider_vol, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_stop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_fullscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel_time))))
                    .addComponent(jLabel_next, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        Ausblender ausblender = new Ausblender();
        Instance_hold.getFsf().getMml().setTimer(new Timer());
        Instance_hold.getFsf().getMml().getTimer().schedule(ausblender,2000);
        System.out.println("Exited");
    }//GEN-LAST:event_formMouseExited

    private void jSlider_MediaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseReleased
        //System.out.println("SETTIME_VALUE: " + (int)(Instance_data.getMedia_length()*(sl_value/1000.0)));
        if (dragged) {
            Instance_hold.getFsf().getEmpc().getMediaPlayer().setTime((int)(Instance_data.getMedia_length()*(sl_value/1000.0)));
            dragged = false;
        }
    }//GEN-LAST:event_jSlider_MediaMouseReleased

    private void jSlider_MediaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseDragged
        sl_value = this.jSlider_Media.getValue();
        System.out.println("SLVALUE: " + sl_value/1000.0);
        dragged = true;
    }//GEN-LAST:event_jSlider_MediaMouseDragged

    private void jSlider_volMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_volMouseDragged
        vo_value = this.jSlider_vol.getValue();
        Instance_hold.getFsf().getEmpc().getMediaPlayer().setVolume(vo_value);
        Instance_hold.getMframe().getjSlider_vol().setValue(vo_value);
        Instance_hold.getPlayframe().getjSlider_vol().setValue(vo_value);
    }//GEN-LAST:event_jSlider_volMouseDragged

    private void jLabel_stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseClicked
        System.out.println("STOP");
        Instance_hold.getFsf().getEmpc().getMediaPlayer().stop();
        while(Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(FS_Navi_Tab.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_grey_play_small.png")));
        this.jSlider_Media.setValue(0);
        stop = true;
    }//GEN-LAST:event_jLabel_stopMouseClicked

    private void jLabel_stopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
        this.jLabel_stop.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_blue_stop_small.png")));
    }//GEN-LAST:event_jLabel_stopMouseEntered

    private void jLabel_stopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseExited
        this.jLabel_stop.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_grey_stop_small.png")));
    }//GEN-LAST:event_jLabel_stopMouseExited

    private void jLabel_stopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMousePressed
        this.jLabel_stop.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_green_stop_small.png")));
    }//GEN-LAST:event_jLabel_stopMousePressed

    private void jLabel_stopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_stopMouseReleased
        this.jLabel_stop.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_blue_stop_small.png")));
    }//GEN-LAST:event_jLabel_stopMouseReleased

    private void jButton_fullscreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_fullscreenActionPerformed
        File file = new File(Instance_data.getPlaypath());
        System.out.println(Instance_data.getPlaypath());
        Instance_hold.getFsnt().setVisible(false);
        Instance_hold.getFsf().setVisible(false);
        Instance_data.setMedia_time(Instance_hold.getFsf().getEmpc().getMediaPlayer().getTime());
        Instance_hold.getFsf().getEmpc().getMediaPlayer().stop();
        Instance_hold.getPlayframe().setVisible(true);
        Instance_hold.getPlayframe().getEmpc().getMediaPlayer().playMedia(Instance_data.getPlaypath());
        Instance_hold.getPlayframe().getEmpc().getMediaPlayer().setTime(Instance_data.getMedia_time());
        while(!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying() && file.exists()) {
            System.out.println("FSF:   WAITING TO START PLAYING:::::");
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {

            }
        };
        
        Instance_hold.getPlayframe().getjLabel_play().setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_grey_pause_small.png")));
        Instance_hold.getMframe().getClistener().setFullscreen(false);
    }//GEN-LAST:event_jButton_fullscreenActionPerformed

    private void jLabel_playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMouseClicked
        if (this.playcontrol) {
            this.setEnabled(false);
                if (!Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                    Instance_hold.getFsf().getEmpc().getMediaPlayer().start();
                    while(!Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                        //System.out.println("WAITING TO START PLAYING:::::");
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {

                        }
                    };

                    this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_blue_pause_small.png")));
                    stop = false;
                }
                else {
                    Instance_hold.getFsf().getEmpc().getMediaPlayer().pause();
                    while(Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(FS_Navi_Tab.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_blue_play_small.png")));
                    stop = true;
                }
                this.setEnabled(true);
        }
    }//GEN-LAST:event_jLabel_playMouseClicked

    private void jLabel_playMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
        if (stop) this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_blue_play_small.png")));
        else this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_blue_pause_small.png")));
    }//GEN-LAST:event_jLabel_playMouseEntered

    private void jLabel_playMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMouseExited
        if (stop) this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_grey_play_small.png")));
        else this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_grey_pause_small.png")));
    }//GEN-LAST:event_jLabel_playMouseExited

    private void jLabel_playMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_playMousePressed
        if (stop) {
            this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_green_play_small.png")));
        }else {
            this.jLabel_play.setIcon(new ImageIcon(getClass().getResource("/gui/design/mcb_green_pause_small.png")));
        }
    }//GEN-LAST:event_jLabel_playMousePressed

    private void jLabel_timeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_timeMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
    }//GEN-LAST:event_jLabel_timeMouseEntered

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jSlider_volMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_volMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
    }//GEN-LAST:event_jSlider_volMouseEntered

    private void jButton_fullscreenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_fullscreenMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
    }//GEN-LAST:event_jButton_fullscreenMouseEntered

    private void jSlider_MediaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseEntered
        Instance_hold.getFsf().getMml().getTimer().cancel();
    }//GEN-LAST:event_jSlider_MediaMouseEntered

    private void jSlider_MediaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider_MediaMouseClicked
        if (!dragged) Instance_hold.getFsf().getEmpc().getMediaPlayer().setTime((int)(Instance_data.getMedia_length()*(this.jSlider_Media.getMousePosition().getX()/this.jSlider_Media.getSize().getWidth())));        
    }//GEN-LAST:event_jSlider_MediaMouseClicked

    private void jLabel_nextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseReleased
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_blue_fwd_small());
    }//GEN-LAST:event_jLabel_nextMouseReleased

    private void jLabel_nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseClicked
        System.out.println("PLAYCONTROL: " + this.playcontrol);
        if (this.playcontrol) {
            this.playcontrol = false;

            Instance_hold.getMframe().getjProgressBar_main().setIndeterminate(true);
            this.setEnabled(false);
            Main_controls.nextMedia();

            while(!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying() && !Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            this.setEnabled(true);
            this.playcontrol = true;
        }
    }//GEN-LAST:event_jLabel_nextMouseClicked

    private void jLabel_nextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseEntered
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_blue_fwd_small());
    }//GEN-LAST:event_jLabel_nextMouseEntered

    private void jLabel_nextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMouseExited
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_grey_fwd_small());
    }//GEN-LAST:event_jLabel_nextMouseExited

    private void jLabel_nextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_nextMousePressed
        this.jLabel_next.setIcon(Instance_hold.getIm_hold().getMcb_green_fwd_small());
    }//GEN-LAST:event_jLabel_nextMousePressed

    private void jLabel_prevMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseReleased
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_blue_prev_small());
    }//GEN-LAST:event_jLabel_prevMouseReleased

    private void jLabel_prevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseClicked
        System.out.println("PLAYCONTROL: " + this.playcontrol);
        if (this.playcontrol) {
            this.playcontrol = false;

            Instance_hold.getMframe().getjProgressBar_main().setIndeterminate(true);
            this.setEnabled(false);
            Main_controls.prevMedia();

            while(!Instance_hold.getPlayframe().getEmpc().getMediaPlayer().isPlaying() && !Instance_hold.getFsf().getEmpc().getMediaPlayer().isPlaying()) {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            this.setEnabled(true);
            this.playcontrol = true;
        }
    }//GEN-LAST:event_jLabel_prevMouseClicked

    private void jLabel_prevMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseEntered
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_blue_prev_small());
    }//GEN-LAST:event_jLabel_prevMouseEntered

    private void jLabel_prevMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMouseExited
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_grey_prev_small());
    }//GEN-LAST:event_jLabel_prevMouseExited

    private void jLabel_prevMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_prevMousePressed
        this.jLabel_prev.setIcon(Instance_hold.getIm_hold().getMcb_green_prev_small());
    }//GEN-LAST:event_jLabel_prevMousePressed

    public JSlider getjSlider_Media() {
        return jSlider_Media;
    }

    public JSlider getjSlider_vol() {
        return jSlider_vol;
    }
    
    public JLabel getjLabel_time() {
        return jLabel_time;
    }    

    public void setjLabel_time(JLabel jLabel_time) {
        this.jLabel_time = jLabel_time;
    }

    public JLabel getjLabel_play() {
        return jLabel_play;
    }

    public void setStop(boolean stop) {
        this.stop = stop;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_fullscreen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_next;
    private javax.swing.JLabel jLabel_play;
    private javax.swing.JLabel jLabel_prev;
    private javax.swing.JLabel jLabel_stop;
    private javax.swing.JLabel jLabel_time;
    private javax.swing.JSlider jSlider_Media;
    private javax.swing.JSlider jSlider_vol;
    // End of variables declaration//GEN-END:variables
}